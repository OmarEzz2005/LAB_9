/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FrontEnd;

import BackEnd.UserAccount;
import FrontEnd.LOGIN;
import static FrontEnd.LOGIN.database;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class ViewFriendRequests extends javax.swing.JPanel {

    /**
     * Creates new form ViewFriendRequests
     */
    public ViewFriendRequests() {
        initComponents();
        addToTable();
    }

    
    
    
    
    
    
    public void addToTable()
    {
        
        ArrayList<UserAccount> requests = LOGIN.database.getCurrentUser().getRequests();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        if( requests == null || requests.isEmpty())
        {
            System.out.println("Here");
            Object[] row = new Object[2];
            row[0] = "No requests";
            row[1] = "";
            model.addRow(row);
            return;
        }
        
        //System.out.println("Requests"+requests.get(0).getUsername());
        for (UserAccount c : requests) {
            
            Object[] row = new Object[2];
            row[0] = c.getUsername();
            row[1] = c.getStatus();
            model.addRow(row);
        }
        
        
        
        
    }   
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Back = new javax.swing.JButton();
        Accept = new javax.swing.JButton();
        Decline = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "UserName", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Accept.setText("Accept");
        Accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptActionPerformed(evt);
            }
        });

        Decline.setText("Decline");
        Decline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeclineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(Back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(Accept)
                        .addGap(100, 100, 100)
                        .addComponent(Decline)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Back)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Accept)
                    .addComponent(Decline))
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        Newsfeed admin = new Newsfeed();
        admin.setVisible(true);
        
        
         LOGIN parentFrame = (LOGIN) SwingUtilities.getWindowAncestor(Back);
        if (parentFrame != null) {
            parentFrame.setContentPane(admin);
            parentFrame.revalidate(); 
            parentFrame.repaint();
            parentFrame.pack();
        }
    }//GEN-LAST:event_BackActionPerformed

    private void AcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
                String username = (String) jTable1.getValueAt(selectedRow, 0);
                if(username.equals("No requests"))
                {
                    JOptionPane.showMessageDialog(null,"No friend request to accept !!","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                LOGIN.database.getCurrentUser().approveRequest(username);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.removeRow(selectedRow);
                if (model.getRowCount() == 0) {
                Object[] row = new Object[2];
                row[0] = "No requests";
                row[1] = "";
                model.addRow(row);
                }
                JOptionPane.showMessageDialog(null, "You have Accepted the request", "Success", JOptionPane.INFORMATION_MESSAGE);       
        }
        
        
        
    }//GEN-LAST:event_AcceptActionPerformed

    private void DeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeclineActionPerformed
        // TODO add your handling code here:
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
    String username = (String) jTable1.getValueAt(selectedRow, 0);
    
    if (username.equals("No requests")) {
        JOptionPane.showMessageDialog(null, "No friend request to decline !!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // Decline the request
    LOGIN.database.getCurrentUser().declineRequest(username);
    
    // Remove the row from the table
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.removeRow(selectedRow);

    // Check if the table is empty, and if so, add a "No requests" row
    if (model.getRowCount() == 0) {
        Object[] row = new Object[2];
        row[0] = "No requests";
        row[1] = "";
        model.addRow(row);
    }

    // Show success message
    JOptionPane.showMessageDialog(null, "You have declined the request", "Success", JOptionPane.INFORMATION_MESSAGE);
   }

    }//GEN-LAST:event_DeclineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Accept;
    private javax.swing.JButton Back;
    private javax.swing.JButton Decline;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
