/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FrontEnd;

import BackEnd.ProfileManagement;
import BackEnd.UserAccount;
import BackEnd.UserDatabase;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author lenovo
 */
public class profileManagementPage extends javax.swing.JPanel {

    
    private BufferedImage coverImage;
    private BufferedImage profileImage;
    ProfileManagement profilemanager; 
    
    
    
    
    /**
     * Creates new form profileManagementPage
     */
    public profileManagementPage(UserAccount user) {
        profilemanager = user.getProfile();
        initComponents();
        
        //this.setProfileImage("C:\\Users\\lenovo\\OneDrive\\Desktop\\39eb6215-3133-4a70-85dd-fc18da0467f0.JPG");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profilePhotoJPanel = new javax.swing.JPanel(){

            BufferedImage profileImage;
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);

                UserDatabase users = LOGIN.database;
                String profilePath = users.getCurrentUser().getProfile().getProfilePhotoPath();
                // System.out.println(profilePath);

                if (profilePath != null) {
                    if (profileImage == null) {
                        try {
                            profileImage = ImageIO.read(new File(profilePath));
                        } catch (IOException e) {
                            System.out.println("Error loading profile photo");
                        }
                    }

                    if (profileImage != null) {

                        g.drawImage(profileImage, 0,0,this.getWidth(), this.getHeight(), this);
                    }
                }
            }

            public void setProfileImage(String profilePath) {
                try {
                    profileImage = ImageIO.read(new File(profilePath));
                    repaint();
                } catch (IOException e) {
                    System.out.println("Error loading profile photo");
                }
            }

        };
        coverPhotoJPanel = new javax.swing.JPanel(){

            BufferedImage coverImage;
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);

                UserDatabase users = LOGIN.database;
                String coverPath = users.getCurrentUser().getProfile().getCoverPhotoPath();
                // System.out.println(profilePath);

                if (coverPath != null) {
                    if (coverImage == null) {
                        try {
                            coverImage = ImageIO.read(new File(coverPath));
                        } catch (IOException e) {
                            System.out.println("Error loading profile photo");
                        }
                    }

                    if (coverImage != null) {

                        g.drawImage(coverImage, 0,0,this.getWidth(), this.getHeight(), this);
                    }
                }
            }

            public void setProfileImage(String coverPath) {
                try {
                    coverImage = ImageIO.read(new File(coverPath));
                    repaint();
                } catch (IOException e) {
                    System.out.println("Error loading profile photo");
                }
            }

        };
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        bio = new javax.swing.JTextField();

        profilePhotoJPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout profilePhotoJPanelLayout = new javax.swing.GroupLayout(profilePhotoJPanel);
        profilePhotoJPanel.setLayout(profilePhotoJPanelLayout);
        profilePhotoJPanelLayout.setHorizontalGroup(
            profilePhotoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        profilePhotoJPanelLayout.setVerticalGroup(
            profilePhotoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        coverPhotoJPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout coverPhotoJPanelLayout = new javax.swing.GroupLayout(coverPhotoJPanel);
        coverPhotoJPanel.setLayout(coverPhotoJPanelLayout);
        coverPhotoJPanelLayout.setHorizontalGroup(
            coverPhotoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        coverPhotoJPanelLayout.setVerticalGroup(
            coverPhotoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Bio");

        jButton1.setText("View Profile Photo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Change Profile Photo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("View Cover Photo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Change Cover Photo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Home Page");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Change Bio");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        bio.setEditable(false);
        bio.setText(profilemanager.getBio());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coverPhotoJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profilePhotoJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bio, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coverPhotoJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bio)
                    .addComponent(profilePhotoJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(74, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    public void setProfileImage(String profilePath) {
    try {
        profileImage = ImageIO.read(new File(profilePath));
        profilePhotoJPanel.repaint(); 
    } catch (IOException e) {
        System.out.println("Error loading profile photo");
    }
   }
    
    
    public void setCoverImage(String coverPath) {
    try {
        coverImage = ImageIO.read(new File(coverPath));
        coverPhotoJPanel.repaint(); 
    } catch (IOException e) {
        System.out.println("Error loading cover photo");
    }
   }
    
    
    
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "png"));
        //types of files that can be chosen from
        int result = fileChooser.showOpenDialog(this);//show open file dialog 
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();//capture selected file
            try {
                profileImage = ImageIO.read(selectedFile);//read and capture image file 
                profilemanager.updateProfilePhoto(selectedFile.getAbsolutePath());
                profilePhotoJPanel.getGraphics().drawImage(profileImage, 0, 0, profilePhotoJPanel.getWidth(), profilePhotoJPanel.getHeight(), this);
                //display photo on profile photo JPanel
            } catch (IOException e) {
                e.printStackTrace();  // Handle file not found, etc..
            }
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (profileImage != null) {      
        JFrame fullSizeFrame = new JFrame("Full Size Profile Photo");//New Jframe to display pic in full size
        fullSizeFrame.setSize(profileImage.getWidth(), profileImage.getHeight());// Set frame size = image size 
        JLabel imageLabel = new JLabel(new ImageIcon(profileImage));//JLabel to display the image       
        fullSizeFrame.add(imageLabel);// Add image label to frame
        fullSizeFrame.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "No profile photo available.");
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "png"));
        //types of files that can be chosen from
        int result = fileChooser.showOpenDialog(this);//Show open file dialog  
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();//capture selected file
            try {
                coverImage = ImageIO.read(selectedFile);//read and capture image file   
                profilemanager.updateCoverPhoto(selectedFile.getAbsolutePath());
                coverPhotoJPanel.getGraphics().drawImage(coverImage, 0, 0, coverPhotoJPanel.getWidth(), coverPhotoJPanel.getHeight(), this);
                //display photo on cover photo JPanel
            } catch (IOException e) {
                e.printStackTrace(); //Handle file not found, etc..
            }}
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (coverImage != null) {       
        JFrame fullSizeFrame = new JFrame("Full Size Cover Photo");// New JFrame to display pic in Full size       
        fullSizeFrame.setSize(coverImage.getWidth(), coverImage.getHeight());// Set frame size = image size      
        JLabel imageLabel = new JLabel(new ImageIcon(coverImage));//JLabel to display the image        
        fullSizeFrame.add(imageLabel);// Add image label to frame
        fullSizeFrame.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "No cover photo available.");
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        EditBioWindow editbiowindow = new EditBioWindow();
        editbiowindow.setVisible(true);
        
        String newBio = EditBioWindow.bioText;
        if(newBio != null && !newBio.isEmpty())
        {
            profilemanager.updateBio(newBio);
        }
       
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Newsfeed page = new Newsfeed();
        page.setVisible(true);
        
        LOGIN parentFrame = (LOGIN) SwingUtilities.getWindowAncestor(jButton3);
        if (parentFrame != null) {
            parentFrame.setContentPane(page);
            parentFrame.revalidate();
            parentFrame.repaint();
            parentFrame.pack();
        }
        
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField bio;
    public static javax.swing.JPanel coverPhotoJPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JPanel profilePhotoJPanel;
    // End of variables declaration//GEN-END:variables
}
