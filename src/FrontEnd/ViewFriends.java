/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FrontEnd;

import BackEnd.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class ViewFriends extends javax.swing.JPanel {

    /**
     * Creates new form ViewFriends
     */
    public ViewFriends() {
        initComponents();
        addToTable();
    }

    
    
    
    
    
     public void addToTable()
    {
        
        ArrayList<UserAccount> friends = LOGIN.database.getCurrentUser().getFriends();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        if( friends == null || friends.isEmpty())
        {
           // System.out.println("Here");
            Object[] row = new Object[2];
            row[0] = "No Friends";
            row[1] = "";
            model.addRow(row);
            return;
        }
        
        //System.out.println("Requests"+requests.get(0).getUsername());
        for (UserAccount c : friends) {
            
            Object[] row = new Object[2];
            row[0] = c.getUsername();
            row[1] = c.getStatus();
            model.addRow(row);
        }
        
        
        
        
    }   
    
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Back = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        Block = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Friend Name", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Remove.setText("Remove");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        Block.setText("Block");
        Block.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Back)
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(Remove)
                        .addGap(106, 106, 106)
                        .addComponent(Block)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Back)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Remove)
                    .addComponent(Block))
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        Newsfeed admin = new Newsfeed();
        admin.setVisible(true);
        
        
         LOGIN parentFrame = (LOGIN) SwingUtilities.getWindowAncestor(Back);
        if (parentFrame != null) {
            parentFrame.setContentPane(admin);
            parentFrame.revalidate(); 
            parentFrame.repaint();
            parentFrame.pack();
        }
    }//GEN-LAST:event_BackActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
                String username = (String) jTable1.getValueAt(selectedRow, 0);
                if(username.equals("No Friends"))
                {
                    JOptionPane.showMessageDialog(null,"No friends to remove !!","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                LOGIN.database.getCurrentUser().removeFriend(username);
                LOGIN.database.saveToFile();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.removeRow(selectedRow);
                if (model.getRowCount() == 0) {
                    Object[] row = new Object[2];
                    row[0] = "No Friends";
                    row[1] = "";
                    model.addRow(row);
                }
                JOptionPane.showMessageDialog(this, username + " Removed Successfully ");
                
            
                      
        }
        
    }//GEN-LAST:event_RemoveActionPerformed

    private void BlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlockActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
                String username = (String) jTable1.getValueAt(selectedRow, 0);
                if(username.equals("No Friends"))
                {
                    JOptionPane.showMessageDialog(null,"No friends to block !!","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (!LOGIN.database.getCurrentUser().isBlocked(username)) {
                    boolean done = LOGIN.database.getCurrentUser().blockUser(username);
                    if (done){
                        JOptionPane.showMessageDialog(this, username + " Blocked Successfully ");}
                    if(!done) {
                        JOptionPane.showMessageDialog(this, username + " could not be found ");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(this, username + " Already blocked ");
                }
                
                LOGIN.database.saveToFile();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.removeRow(selectedRow);
                if (model.getRowCount() == 0) {
                    Object[] row = new Object[2];
                    row[0] = "No Friends";
                    row[1] = "";
                    model.addRow(row);
                }
                JOptionPane.showMessageDialog(this, username + " Blocked Successfully ");
                
            
                      
        }
        
        
    }//GEN-LAST:event_BlockActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Block;
    private javax.swing.JButton Remove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
